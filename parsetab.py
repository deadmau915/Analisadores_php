
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = '\xcc/-r\x90lZ\xfc\x10\xecU$\xb6&w\xd1'
    
_lr_action_items = {'TIMES':([41,45,48,51,52,57,58,59,60,128,129,134,140,161,162,],[-91,-98,-90,-85,-89,-67,105,-99,-92,105,-89,-88,-84,-68,-93,]),'RETURN':([14,25,35,42,43,47,49,53,54,55,61,65,71,75,84,86,108,110,112,113,115,117,118,119,120,121,125,126,127,131,142,144,145,152,153,154,158,159,164,165,170,171,173,178,179,183,184,187,],[-13,40,-25,-50,-100,-52,-46,-48,-58,-47,-49,40,-33,-24,-62,-100,-51,40,40,40,-32,-12,-11,-27,-29,-31,-63,-100,-43,-57,-60,-55,-53,-26,-28,-30,-100,-42,-56,40,40,-45,-54,-44,-58,40,-41,-59,]),'LESS':([41,45,46,48,51,52,57,58,59,60,104,107,128,129,134,140,161,162,],[-91,-98,89,-90,-85,-89,-67,-79,-99,-92,-81,-80,-78,-89,-88,-84,-68,-93,]),'DEFAULT':([1,7,8,11,14,15,18,19,21,22,23,25,35,37,42,43,47,49,53,54,55,61,65,69,71,75,84,86,108,110,112,113,115,117,118,119,120,121,125,126,127,131,141,142,144,145,152,153,154,156,158,159,164,165,170,171,173,178,179,183,184,185,187,],[4,-10,-4,-9,-13,-6,-8,-3,4,-7,-5,4,-25,-2,-50,-100,-52,-46,-48,-58,-47,-49,4,-15,-33,-24,-62,-100,-51,4,4,4,-32,-12,-11,-27,-29,-31,-63,-100,-43,-57,-14,-60,-55,-53,-26,-28,-30,-34,-100,-42,-56,4,4,-45,-54,-44,-58,4,-41,-16,-59,]),'REQUIRE':([1,7,8,11,14,15,18,19,21,22,23,35,37,42,47,49,53,54,55,61,69,71,75,84,108,110,112,113,115,117,118,119,120,121,125,131,141,142,144,145,152,153,154,156,164,165,173,183,184,185,187,],[5,-10,-4,-9,-13,-6,-8,-3,5,-7,-5,-25,-2,-50,-52,-46,-48,-58,-47,-49,-15,-33,-24,-62,-51,-100,-100,-100,-32,-12,-11,-27,-29,-31,-63,-57,-14,-60,-55,-53,-26,-28,-30,-34,-56,-100,-54,-100,-41,-16,-59,]),'NUMBER':([9,14,25,27,30,35,36,40,42,43,47,49,53,54,55,56,61,65,71,75,84,86,87,88,89,90,91,92,93,94,95,96,97,99,101,102,103,105,106,108,110,112,113,115,116,117,118,119,120,121,125,126,127,131,142,144,145,152,153,154,158,159,163,164,165,169,170,171,173,178,179,183,184,187,],[28,-13,41,41,41,-25,76,41,-50,-100,-52,-46,-48,-58,-47,41,-49,41,-33,-24,-62,-100,41,41,-71,-75,-76,-74,-82,-77,-72,-83,-73,41,41,41,-87,-86,41,-51,41,41,41,-32,41,-12,-11,-27,-29,-31,-63,-100,-43,-57,-60,-55,-53,-26,-28,-30,-100,-42,41,-56,41,41,41,-45,-54,-44,-58,41,-41,-59,]),'LBRACKET':([57,67,82,],[101,101,124,]),'WHILE':([1,7,8,11,14,15,18,19,21,22,23,25,35,37,42,43,47,49,53,54,55,61,65,69,71,75,84,86,108,110,112,113,115,117,118,119,120,121,125,126,127,131,141,142,144,145,152,153,154,156,158,159,164,165,170,171,173,178,179,183,184,185,187,],[6,-10,-4,-9,-13,-6,-8,-3,6,-7,-5,6,-25,-2,-50,-100,-52,-46,-48,-58,-47,-49,6,-15,-33,-24,-62,-100,-51,6,6,6,-32,-12,-11,-27,-29,-31,-63,-100,-43,-57,-14,-60,-55,-53,-26,-28,-30,-34,-100,-42,-56,6,6,-45,-54,-44,-58,6,-41,-16,-59,]),'PROTECTED':([14,35,70,71,75,114,115,117,118,119,120,121,150,152,153,154,156,166,167,174,176,182,184,186,],[-13,-25,-100,-33,-24,148,-32,-12,-11,-27,-29,-31,148,-26,-28,-30,-34,-18,148,148,-17,-20,-41,-19,]),'OPEN_TAG':([0,],[1,]),'TRUE':([14,25,27,30,35,36,40,42,43,47,49,53,54,55,56,61,65,71,75,84,86,87,88,89,90,91,92,93,94,95,96,97,99,101,102,103,105,106,108,110,112,113,115,116,117,118,119,120,121,125,126,127,131,142,144,145,152,153,154,158,159,163,164,165,169,170,171,173,178,179,183,184,187,],[-13,45,45,45,-25,45,45,-50,-100,-52,-46,-48,-58,-47,45,-49,45,-33,-24,-62,-100,45,45,-71,-75,-76,-74,-82,-77,-72,-83,-73,45,45,45,-87,-86,45,-51,45,45,45,-32,45,-12,-11,-27,-29,-31,-63,-100,-43,-57,-60,-55,-53,-26,-28,-30,-100,-42,45,-56,45,45,45,-45,-54,-44,-58,45,-41,-59,]),'MINUS':([41,45,46,48,51,52,57,58,59,60,104,107,128,129,130,134,140,161,162,177,],[-91,-98,96,-90,-85,-89,-67,-79,-99,-92,-81,-80,-78,-89,96,-88,-84,-68,-93,96,]),'COMMA':([41,44,45,46,48,51,52,57,58,59,60,79,80,82,104,107,128,129,130,133,134,138,139,140,155,157,160,161,162,172,],[-91,-65,-98,-70,-90,-85,-89,-67,-79,-99,-92,122,-38,-39,-81,-80,-78,-89,-69,-64,-88,163,-97,-84,-37,-40,-66,-68,-93,-96,]),'DIVIDE':([41,45,48,51,52,57,58,59,60,128,129,134,140,161,162,],[-91,-98,-90,-85,-89,-67,103,-99,-92,103,-89,-88,-84,-68,-93,]),'CASE':([1,7,8,11,14,15,18,19,21,22,23,25,35,37,42,43,47,49,53,54,55,61,65,69,71,75,84,86,108,110,112,113,115,117,118,119,120,121,125,126,127,131,141,142,144,145,152,153,154,156,158,159,164,165,170,171,173,178,179,183,184,185,187,],[9,-10,-4,-9,-13,-6,-8,-3,9,-7,-5,9,-25,-2,-50,-100,-52,-46,-48,-58,-47,-49,9,-15,-33,-24,-62,-100,-51,9,9,9,-32,-12,-11,-27,-29,-31,-63,-100,-43,-57,-14,-60,-55,-53,-26,-28,-30,-34,-100,-42,-56,9,9,-45,-54,-44,-58,9,-41,-16,-59,]),'GREATEREQUAL':([41,45,46,48,51,52,57,58,59,60,104,107,128,129,134,140,161,162,],[-91,-98,92,-90,-85,-89,-67,-79,-99,-92,-81,-80,-78,-89,-88,-84,-68,-93,]),'RPAREN':([39,41,44,45,46,48,51,52,57,58,59,60,63,64,66,67,68,79,80,81,82,83,100,102,104,107,128,129,130,133,134,136,137,138,139,140,155,157,160,161,162,172,177,],[-100,-91,-65,-98,-70,-90,-85,-89,-67,-79,-99,-92,109,110,112,-67,113,-35,-38,123,-39,-36,134,-100,-81,-80,-78,-89,-69,-64,-88,-95,162,-94,-97,-84,-37,-40,-66,-68,-93,-96,183,]),'SEMICOLON':([14,20,25,32,35,40,41,42,43,44,45,46,47,48,49,51,52,53,54,55,57,58,59,60,61,62,65,71,72,73,74,75,76,77,78,84,85,86,98,104,107,108,109,110,112,113,115,117,118,119,120,121,125,126,127,128,129,130,131,133,134,140,142,143,144,145,151,152,153,154,158,159,160,161,162,164,165,170,171,173,178,179,183,184,187,],[-13,35,47,71,-25,84,-91,-50,-100,-65,-98,-70,-52,-90,-46,-85,-89,-48,-58,-47,-67,-79,-99,-92,-49,108,47,-33,116,117,118,-24,119,120,121,-62,125,-100,131,-81,-80,-51,141,47,47,47,-32,-12,-11,-27,-29,-31,-63,-100,-43,-78,-89,-69,-57,-64,-88,-84,-60,164,-55,-53,169,-26,-28,-30,-100,-42,-66,-68,-93,-56,47,47,-45,-54,-44,-58,47,-41,-59,]),'PRIVATE':([14,35,70,71,75,114,115,117,118,119,120,121,150,152,153,154,156,166,167,174,176,182,184,186,],[-13,-25,-100,-33,-24,147,-32,-12,-11,-27,-29,-31,147,-26,-28,-30,-34,-18,147,147,-17,-20,-41,-19,]),'PLUS':([41,45,46,48,51,52,57,58,59,60,104,107,128,129,130,134,140,161,162,177,],[-91,-98,93,-90,-85,-89,-67,-79,-99,-92,-81,-80,-78,-89,93,-88,-84,-68,-93,93,]),'PLUSPLUS':([41,45,48,51,52,57,58,59,60,129,134,140,161,162,],[-91,-98,-90,-85,-89,-67,104,-99,-92,-89,-88,-84,-68,-93,]),'SWITCH':([1,7,8,11,14,15,18,19,21,22,23,25,35,37,42,43,47,49,53,54,55,61,65,69,71,75,84,86,108,110,112,113,115,117,118,119,120,121,125,126,127,131,141,142,144,145,152,153,154,156,158,159,164,165,170,171,173,178,179,183,184,185,187,],[10,-10,-4,-9,-13,-6,-8,-3,10,-7,-5,10,-25,-2,-50,-100,-52,-46,-48,-58,-47,-49,10,-15,-33,-24,-62,-100,-51,10,10,10,-32,-12,-11,-27,-29,-31,-63,-100,-43,-57,-14,-60,-55,-53,-26,-28,-30,-34,-100,-42,-56,10,10,-45,-54,-44,-58,10,-41,-16,-59,]),'COLON':([4,28,],[25,65,]),'CLOSE_TAG':([1,7,8,11,14,15,18,19,21,22,23,35,37,42,47,49,53,54,55,61,69,71,75,84,108,110,112,113,115,117,118,119,120,121,125,131,141,142,144,145,152,153,154,156,164,165,173,183,184,185,187,],[-100,-10,-4,-9,-13,-6,-8,-3,38,-7,-5,-25,-2,-50,-52,-46,-48,-58,-47,-49,-15,-33,-24,-62,-51,-100,-100,-100,-32,-12,-11,-27,-29,-31,-63,-57,-14,-60,-55,-53,-26,-28,-30,-34,-56,-100,-54,-100,-41,-16,-59,]),'CLASS':([1,7,8,11,14,15,18,19,21,22,23,35,37,42,47,49,53,54,55,61,69,71,75,84,108,110,112,113,115,117,118,119,120,121,125,131,141,142,144,145,152,153,154,156,164,165,173,183,184,185,187,],[13,-10,-4,-9,-13,-6,-8,-3,13,-7,-5,-25,-2,-50,-52,-46,-48,-58,-47,-49,-15,-33,-24,-62,-51,-100,-100,-100,-32,-12,-11,-27,-29,-31,-63,-57,-14,-60,-55,-53,-26,-28,-30,-34,-56,-100,-54,-100,-41,-16,-59,]),'$end':([2,38,],[0,-1,]),'FUNCTION':([1,7,8,11,14,15,18,19,21,22,23,35,37,42,47,49,53,54,55,61,69,71,75,84,108,110,112,113,115,117,118,119,120,121,125,131,141,142,144,145,146,147,148,152,153,154,156,164,165,173,175,181,183,184,185,187,],[3,-10,-4,-9,-13,-6,-8,-3,3,-7,-5,-25,-2,-50,-52,-46,-48,-58,-47,-49,-15,-33,-24,-62,-51,-100,-100,-100,-32,-12,-11,-27,-29,-31,-63,-57,-14,-60,-55,-53,-22,-21,-23,-26,-28,-30,-34,-56,-100,-54,3,3,-100,-41,-16,-59,]),'AMPERSANT':([1,7,8,11,14,15,18,19,21,22,23,33,35,37,42,43,47,49,53,54,55,61,69,71,75,84,86,99,108,110,112,113,115,117,118,119,120,121,125,126,127,131,141,142,144,145,146,147,148,149,152,153,154,156,159,164,165,168,173,183,184,185,187,],[16,-10,-4,-9,-13,-6,-8,-3,16,-7,-5,16,16,-2,-50,-100,-52,-46,-48,-58,-47,-49,-15,16,-24,-62,-100,132,-51,-100,-100,-100,-32,-12,-11,16,16,16,-63,16,-43,-57,-14,-60,-55,-53,-22,-21,-23,16,-26,-28,-30,-34,-42,-56,-100,16,-54,-100,-41,-16,-59,]),'STRING':([26,34,],[63,74,]),'FOR':([1,7,8,11,14,15,18,19,21,22,23,25,35,37,42,43,47,49,53,54,55,61,65,69,71,75,84,86,108,110,112,113,115,117,118,119,120,121,125,126,127,131,141,142,144,145,152,153,154,156,158,159,164,165,170,171,173,178,179,183,184,185,187,],[17,-10,-4,-9,-13,-6,-8,-3,17,-7,-5,17,-25,-2,-50,-100,-52,-46,-48,-58,-47,-49,17,-15,-33,-24,-62,-100,-51,17,17,17,-32,-12,-11,-27,-29,-31,-63,-100,-43,-57,-14,-60,-55,-53,-26,-28,-30,-34,-100,-42,-56,17,17,-45,-54,-44,-58,17,-41,-16,-59,]),'EQUAL':([20,52,57,161,],[36,99,-67,-68,]),'ISEQUAL':([41,45,46,48,51,52,57,58,59,60,104,107,128,129,134,140,161,162,],[-91,-98,94,-90,-85,-89,-67,-79,-99,-92,-81,-80,-78,-89,-88,-84,-68,-93,]),'ECHO':([1,7,8,11,14,15,18,19,21,22,23,25,35,37,42,43,47,49,53,54,55,61,65,69,70,71,75,84,86,108,110,112,113,114,115,117,118,119,120,121,125,126,127,131,141,142,144,145,150,152,153,154,156,158,159,164,165,166,167,170,171,173,174,176,178,179,180,182,183,184,185,186,187,],[-100,-10,-4,-9,-13,-6,34,-3,-100,-7,-5,-100,-25,-2,-50,-100,-52,-46,-48,34,-47,-49,-100,-15,-100,-33,-24,-62,34,-51,-100,-100,-100,34,-32,-12,-11,-27,-29,-31,-63,-100,-43,-57,-14,-60,-55,-53,-100,-26,-28,-30,-34,34,-42,-56,-100,-18,34,-100,-45,-54,-100,-17,-44,34,34,-20,-100,-41,-16,-19,-59,]),'LPAREN':([5,6,10,12,14,17,24,25,27,30,35,40,42,43,47,49,53,54,55,56,57,61,65,71,75,84,86,87,88,89,90,91,92,93,94,95,96,97,99,101,102,103,105,106,108,110,112,113,115,116,117,118,119,120,121,125,126,127,131,142,144,145,152,153,154,158,159,163,164,165,169,170,171,173,178,179,183,184,187,],[26,27,29,30,-13,33,39,56,56,56,-25,56,-50,-100,-52,-46,-48,-58,-47,56,102,-49,56,-33,-24,-62,-100,56,56,-71,-75,-76,-74,-82,-77,-72,-83,-73,56,56,56,-87,-86,56,-51,56,56,56,-32,56,-12,-11,-27,-29,-31,-63,-100,-43,-57,-60,-55,-53,-26,-28,-30,-100,-42,56,-56,56,56,56,-45,-54,-44,-58,56,-41,-59,]),'LESSEQUAL':([41,45,46,48,51,52,57,58,59,60,104,107,128,129,134,140,161,162,],[-91,-98,95,-90,-85,-89,-67,-79,-99,-92,-81,-80,-78,-89,-88,-84,-68,-93,]),'LBLOCK':([14,25,31,35,42,43,47,49,53,54,55,61,65,71,75,84,86,108,110,112,113,115,117,118,119,120,121,123,125,126,127,131,142,144,145,152,153,154,158,159,164,165,170,171,173,178,179,183,184,187,],[-13,43,70,-25,-50,-100,-52,-46,-48,-58,-47,-49,43,-33,-24,-62,-100,-51,43,43,43,-32,-12,-11,-27,-29,-31,43,-63,-100,-43,-57,-60,-55,-53,-26,-28,-30,-100,-42,-56,43,43,-45,-54,-44,-58,43,-41,-59,]),'MINUSMINUS':([41,45,48,51,52,57,58,59,60,129,134,140,161,162,],[-91,-98,-90,-85,-89,-67,107,-99,-92,-89,-88,-84,-68,-93,]),'ELSE':([14,42,47,49,53,54,55,61,84,108,110,112,113,117,118,125,131,142,144,145,164,165,173,183,184,187,],[-13,-50,-52,-46,-48,-58,-47,-49,-62,-51,-100,-100,-100,-12,-11,-63,-57,-60,-55,165,-56,-100,-54,-100,-41,-59,]),'ID':([1,7,8,11,14,15,16,18,19,21,22,23,25,27,29,30,33,34,35,36,37,39,40,42,43,47,49,53,54,55,56,61,65,69,71,75,84,86,87,88,89,90,91,92,93,94,95,96,97,99,101,102,103,105,106,108,110,112,113,115,116,117,118,119,120,121,122,125,126,127,131,132,141,142,144,145,146,147,148,149,152,153,154,156,158,159,163,164,165,168,169,170,171,173,178,179,183,184,185,187,],[20,-10,-4,-9,-13,-6,32,-8,-3,20,-7,-5,57,57,67,57,20,73,20,78,-2,82,57,-50,-100,-52,-46,-48,-58,-47,57,-49,57,-15,20,-24,-62,-100,57,57,-71,-75,-76,-74,-82,-77,-72,-83,-73,57,57,57,-87,-86,57,-51,57,57,57,-32,57,-12,-11,20,20,20,82,-63,20,-43,-57,160,-14,-60,-55,-53,-22,-21,-23,20,-26,-28,-30,-34,-100,-42,57,-56,57,20,57,57,-45,-54,-44,-58,57,-41,-16,-59,]),'IF':([1,7,8,11,14,15,18,19,21,22,23,25,35,37,42,43,47,49,53,54,55,61,65,69,71,75,84,86,108,110,112,113,115,117,118,119,120,121,125,126,127,131,141,142,144,145,152,153,154,156,158,159,164,165,170,171,173,178,179,183,184,185,187,],[12,-10,-4,-9,-13,-6,-8,-3,12,-7,-5,12,-25,-2,-50,-100,-52,-46,-48,-58,-47,-49,12,-15,-33,-24,-62,-100,-51,12,12,12,-32,-12,-11,-27,-29,-31,-63,-100,-43,-57,-14,-60,-55,-53,-26,-28,-30,-34,-100,-42,-56,12,12,-45,-54,-44,-58,12,-41,-16,-59,]),'FALSE':([14,25,27,30,35,36,40,42,43,47,49,53,54,55,56,61,65,71,75,84,86,87,88,89,90,91,92,93,94,95,96,97,99,101,102,103,105,106,108,110,112,113,115,116,117,118,119,120,121,125,126,127,131,142,144,145,152,153,154,158,159,163,164,165,169,170,171,173,178,179,183,184,187,],[-13,59,59,59,-25,59,59,-50,-100,-52,-46,-48,-58,-47,59,-49,59,-33,-24,-62,-100,59,59,-71,-75,-76,-74,-82,-77,-72,-83,-73,59,59,59,-87,-86,59,-51,59,59,59,-32,59,-12,-11,-27,-29,-31,-63,-100,-43,-57,-60,-55,-53,-26,-28,-30,-100,-42,59,-56,59,59,59,-45,-54,-44,-58,59,-41,-59,]),'GREATER':([41,45,46,48,51,52,57,58,59,60,104,107,128,129,134,140,161,162,],[-91,-98,97,-90,-85,-89,-67,-79,-99,-92,-81,-80,-78,-89,-88,-84,-68,-93,]),'DEQUAL':([41,45,46,48,51,52,57,58,59,60,104,107,128,129,134,140,161,162,],[-91,-98,90,-90,-85,-89,-67,-79,-99,-92,-81,-80,-78,-89,-88,-84,-68,-93,]),'DISTINT':([41,45,46,48,51,52,57,58,59,60,104,107,128,129,134,140,161,162,],[-91,-98,91,-90,-85,-89,-67,-79,-99,-92,-81,-80,-78,-89,-88,-84,-68,-93,]),'BREAK':([14,25,42,47,49,50,53,54,55,61,65,84,108,110,111,112,113,117,118,125,131,142,144,145,164,165,173,183,184,187,],[-13,-100,-50,-52,-46,98,-48,-58,-47,-49,-100,-62,-51,-100,143,-100,-100,-12,-11,-63,-57,-60,-55,-53,-56,-100,-54,-100,-41,-59,]),'RBLOCK':([14,35,42,43,47,49,53,54,55,61,71,75,84,86,108,110,112,113,115,117,118,119,120,121,125,126,127,131,142,144,145,152,153,154,156,158,159,164,165,170,171,173,174,178,179,180,182,183,184,186,187,],[-13,-25,-50,-100,-52,-46,-48,-58,-47,-49,-33,-24,-62,-100,-51,-100,-100,-100,-32,-12,-11,-27,-29,-31,-63,-100,-43,-57,-60,-55,-53,-26,-28,-30,-34,-100,-42,-56,-100,-100,-45,-54,-100,-44,184,185,-20,-100,-41,-19,-59,]),'RBRACKET':([41,44,45,46,48,51,52,57,58,59,60,104,107,124,128,129,130,133,134,135,140,160,161,162,],[-91,-65,-98,-70,-90,-85,-89,-67,-79,-99,-92,-81,-80,157,-78,-89,-69,-64,-88,161,-84,-66,-68,-93,]),'FUNCTION_NAME':([3,13,],[24,31,]),'PUBLIC':([14,35,70,71,75,114,115,117,118,119,120,121,150,152,153,154,156,166,167,174,176,182,184,186,],[-13,-25,-100,-33,-24,146,-32,-12,-11,-27,-29,-31,146,-26,-28,-30,-34,-18,146,146,-17,-20,-41,-19,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'methods':([167,],[174,]),'param_list':([39,],[79,]),'boolean':([25,27,30,36,40,56,65,87,88,99,101,102,106,110,112,113,116,163,165,169,170,183,],[60,60,60,77,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,]),'return_stmt':([25,65,110,112,113,165,170,183,],[42,42,42,42,42,42,42,42,]),'var_declaration2':([1,21,33,35,71,119,120,121,126,149,168,],[8,8,72,75,115,152,153,154,159,166,176,]),'simple_expression':([25,27,30,40,56,65,99,101,102,110,112,113,116,163,165,170,183,],[44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'attributes':([114,],[150,]),'additive_expression':([25,27,30,40,56,65,88,99,101,102,110,112,113,116,163,165,169,170,183,],[46,46,46,46,46,46,130,46,46,46,46,46,46,46,46,46,177,46,46,]),'selection_stmt':([1,21,25,65,110,112,113,165,170,183,],[11,11,53,53,53,53,53,53,53,53,]),'param':([39,122,],[80,155,]),'program':([0,],[2,]),'call':([25,27,30,40,56,65,87,88,99,101,102,106,110,112,113,116,163,165,169,170,183,],[48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,]),'statement':([25,65,110,112,113,165,170,183,],[50,111,142,144,145,173,178,187,]),'factor':([25,27,30,40,56,65,87,88,99,101,102,106,110,112,113,116,163,165,169,170,183,],[51,51,51,51,51,51,51,51,51,51,51,140,51,51,51,51,51,51,51,51,51,]),'var':([25,27,29,30,40,56,65,87,88,99,101,102,106,110,112,113,116,163,165,169,170,183,],[52,52,66,52,52,52,52,129,129,52,52,52,129,52,52,52,52,52,52,129,52,52,]),'expression_stmt':([25,65,110,112,113,165,170,183,],[49,49,49,49,49,49,49,49,]),'empty':([1,21,25,39,43,65,70,86,102,110,112,113,126,150,158,165,170,174,183,],[14,14,14,83,14,14,14,127,136,14,14,14,14,14,171,14,14,14,14,]),'header_declaration':([1,21,],[15,15,]),'addop':([46,130,177,],[87,87,87,]),'print_stmt':([1,21,25,43,65,70,110,112,113,126,150,165,170,174,183,],[18,18,54,86,54,114,54,54,54,158,167,54,179,180,54,]),'args':([102,],[137,]),'compount_stmt':([25,65,110,112,113,123,165,170,183,],[55,55,55,55,55,156,55,55,55,]),'args_list':([102,],[138,]),'declaration':([1,21,],[19,37,]),'local_declarations':([86,],[126,]),'term':([25,27,30,40,56,65,87,88,99,101,102,110,112,113,116,163,165,169,170,183,],[58,58,58,58,58,58,128,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'relop':([46,],[88,]),'declaration_list':([1,],[21,]),'class_declaration':([1,21,],[22,22,]),'fun_declaration':([1,21,175,181,],[23,23,182,186,]),'class_stmt':([31,],[69,]),'mulop':([58,128,],[106,106,]),'params':([39,],[81,]),'statement_list':([158,],[170,]),'iteration_stmt':([1,21,25,65,110,112,113,165,170,183,],[7,7,61,61,61,61,61,61,61,61,]),'expression':([25,27,30,40,56,65,99,101,102,110,112,113,116,163,165,170,183,],[62,64,68,85,100,62,133,135,139,62,62,62,151,172,62,62,62,]),'scope':([114,150,167,174,],[149,168,175,181,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> OPEN_TAG declaration_list CLOSE_TAG','program',3,'p_program','miniphp_parser.py',10),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list_1','miniphp_parser.py',14),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list_2','miniphp_parser.py',18),
  ('declaration -> var_declaration2','declaration',1,'p_declaration','miniphp_parser.py',22),
  ('declaration -> fun_declaration','declaration',1,'p_declaration','miniphp_parser.py',23),
  ('declaration -> header_declaration','declaration',1,'p_declaration','miniphp_parser.py',24),
  ('declaration -> class_declaration','declaration',1,'p_declaration','miniphp_parser.py',25),
  ('declaration -> print_stmt','declaration',1,'p_declaration','miniphp_parser.py',26),
  ('declaration -> selection_stmt','declaration',1,'p_declaration','miniphp_parser.py',27),
  ('declaration -> iteration_stmt','declaration',1,'p_declaration','miniphp_parser.py',28),
  ('print_stmt -> print_stmt ECHO STRING SEMICOLON','print_stmt',4,'p_print_stmt','miniphp_parser.py',33),
  ('print_stmt -> print_stmt ECHO ID SEMICOLON','print_stmt',4,'p_print_stmt','miniphp_parser.py',34),
  ('print_stmt -> empty','print_stmt',1,'p_print_stmt','miniphp_parser.py',35),
  ('header_declaration -> REQUIRE LPAREN STRING RPAREN SEMICOLON','header_declaration',5,'p_header_declaration','miniphp_parser.py',40),
  ('class_declaration -> CLASS FUNCTION_NAME class_stmt','class_declaration',3,'p_class_declaration','miniphp_parser.py',44),
  ('class_stmt -> LBLOCK print_stmt attributes print_stmt methods print_stmt RBLOCK','class_stmt',7,'p_class_stmt','miniphp_parser.py',48),
  ('attributes -> attributes scope var_declaration2','attributes',3,'p_attributes1','miniphp_parser.py',52),
  ('attributes -> scope var_declaration2','attributes',2,'p_attributes2','miniphp_parser.py',56),
  ('methods -> methods scope fun_declaration','methods',3,'p_methods1','miniphp_parser.py',60),
  ('methods -> scope fun_declaration','methods',2,'p_methods2','miniphp_parser.py',64),
  ('scope -> PRIVATE','scope',1,'p_scope','miniphp_parser.py',68),
  ('scope -> PUBLIC','scope',1,'p_scope','miniphp_parser.py',69),
  ('scope -> PROTECTED','scope',1,'p_scope','miniphp_parser.py',70),
  ('var_declaration2 -> ID SEMICOLON var_declaration2','var_declaration2',3,'p_var_declaration_3','miniphp_parser.py',75),
  ('var_declaration2 -> ID SEMICOLON','var_declaration2',2,'p_var_declaration_3','miniphp_parser.py',76),
  ('var_declaration2 -> ID EQUAL NUMBER SEMICOLON var_declaration2','var_declaration2',5,'p_var_declaration_3','miniphp_parser.py',77),
  ('var_declaration2 -> ID EQUAL NUMBER SEMICOLON','var_declaration2',4,'p_var_declaration_3','miniphp_parser.py',78),
  ('var_declaration2 -> ID EQUAL boolean SEMICOLON var_declaration2','var_declaration2',5,'p_var_declaration_3','miniphp_parser.py',79),
  ('var_declaration2 -> ID EQUAL boolean SEMICOLON','var_declaration2',4,'p_var_declaration_3','miniphp_parser.py',80),
  ('var_declaration2 -> ID EQUAL ID SEMICOLON var_declaration2','var_declaration2',5,'p_var_declaration_3','miniphp_parser.py',81),
  ('var_declaration2 -> ID EQUAL ID SEMICOLON','var_declaration2',4,'p_var_declaration_3','miniphp_parser.py',82),
  ('var_declaration2 -> AMPERSANT ID SEMICOLON var_declaration2','var_declaration2',4,'p_var_declaration_3','miniphp_parser.py',83),
  ('var_declaration2 -> AMPERSANT ID SEMICOLON','var_declaration2',3,'p_var_declaration_3','miniphp_parser.py',84),
  ('fun_declaration -> FUNCTION FUNCTION_NAME LPAREN params RPAREN compount_stmt','fun_declaration',6,'p_fun_declaration','miniphp_parser.py',89),
  ('params -> param_list','params',1,'p_params_1','miniphp_parser.py',93),
  ('params -> empty','params',1,'p_params_2','miniphp_parser.py',97),
  ('param_list -> param_list COMMA param','param_list',3,'p_param_list_1','miniphp_parser.py',101),
  ('param_list -> param','param_list',1,'p_param_list_2','miniphp_parser.py',105),
  ('param -> ID','param',1,'p_param_1','miniphp_parser.py',109),
  ('param -> ID LBRACKET RBRACKET','param',3,'p_param_2','miniphp_parser.py',113),
  ('compount_stmt -> LBLOCK print_stmt local_declarations print_stmt statement_list print_stmt RBLOCK','compount_stmt',7,'p_compount_stmt','miniphp_parser.py',117),
  ('local_declarations -> local_declarations var_declaration2','local_declarations',2,'p_local_declarations_1','miniphp_parser.py',121),
  ('local_declarations -> empty','local_declarations',1,'p_local_declarations_2','miniphp_parser.py',125),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list_1','miniphp_parser.py',129),
  ('statement_list -> empty','statement_list',1,'p_statement_list_2','miniphp_parser.py',133),
  ('statement -> expression_stmt','statement',1,'p_statement','miniphp_parser.py',137),
  ('statement -> compount_stmt','statement',1,'p_statement','miniphp_parser.py',138),
  ('statement -> selection_stmt','statement',1,'p_statement','miniphp_parser.py',139),
  ('statement -> iteration_stmt','statement',1,'p_statement','miniphp_parser.py',140),
  ('statement -> return_stmt','statement',1,'p_statement','miniphp_parser.py',141),
  ('expression_stmt -> expression SEMICOLON','expression_stmt',2,'p_expression_stmt_1','miniphp_parser.py',146),
  ('expression_stmt -> SEMICOLON','expression_stmt',1,'p_expression_stmt_2','miniphp_parser.py',150),
  ('selection_stmt -> IF LPAREN expression RPAREN statement','selection_stmt',5,'p_selection_stmt','miniphp_parser.py',154),
  ('selection_stmt -> IF LPAREN expression RPAREN statement ELSE statement','selection_stmt',7,'p_selection_stmt','miniphp_parser.py',155),
  ('selection_stmt -> SWITCH LPAREN var RPAREN statement','selection_stmt',5,'p_selection_stmt','miniphp_parser.py',156),
  ('selection_stmt -> CASE NUMBER COLON statement BREAK SEMICOLON','selection_stmt',6,'p_selection_stmt','miniphp_parser.py',157),
  ('selection_stmt -> DEFAULT COLON statement BREAK SEMICOLON','selection_stmt',5,'p_selection_stmt','miniphp_parser.py',158),
  ('selection_stmt -> print_stmt','selection_stmt',1,'p_selection_stmt','miniphp_parser.py',159),
  ('iteration_stmt -> FOR LPAREN var_declaration2 SEMICOLON expression SEMICOLON additive_expression RPAREN statement','iteration_stmt',9,'p_iteration_stmt','miniphp_parser.py',164),
  ('iteration_stmt -> WHILE LPAREN expression RPAREN statement','iteration_stmt',5,'p_iteration_stmt','miniphp_parser.py',165),
  ('iteration_stmt -> print_stmt','iteration_stmt',1,'p_iteration_stmt_3','miniphp_parser.py',170),
  ('return_stmt -> RETURN SEMICOLON','return_stmt',2,'p_return_stmt_1','miniphp_parser.py',174),
  ('return_stmt -> RETURN expression SEMICOLON','return_stmt',3,'p_return_stmt_2','miniphp_parser.py',178),
  ('expression -> var EQUAL expression','expression',3,'p_expression_1','miniphp_parser.py',182),
  ('expression -> simple_expression','expression',1,'p_expression_2','miniphp_parser.py',186),
  ('expression -> var EQUAL AMPERSANT ID','expression',4,'p_expression_3','miniphp_parser.py',190),
  ('var -> ID','var',1,'p_var_1','miniphp_parser.py',194),
  ('var -> ID LBRACKET expression RBRACKET','var',4,'p_var_2','miniphp_parser.py',198),
  ('simple_expression -> additive_expression relop additive_expression','simple_expression',3,'p_simple_expression_1','miniphp_parser.py',202),
  ('simple_expression -> additive_expression','simple_expression',1,'p_simple_expression_2','miniphp_parser.py',206),
  ('relop -> LESS','relop',1,'p_relop','miniphp_parser.py',210),
  ('relop -> LESSEQUAL','relop',1,'p_relop','miniphp_parser.py',211),
  ('relop -> GREATER','relop',1,'p_relop','miniphp_parser.py',212),
  ('relop -> GREATEREQUAL','relop',1,'p_relop','miniphp_parser.py',213),
  ('relop -> DEQUAL','relop',1,'p_relop','miniphp_parser.py',214),
  ('relop -> DISTINT','relop',1,'p_relop','miniphp_parser.py',215),
  ('relop -> ISEQUAL','relop',1,'p_relop','miniphp_parser.py',216),
  ('additive_expression -> additive_expression addop term','additive_expression',3,'p_additive_expression_1','miniphp_parser.py',221),
  ('additive_expression -> term','additive_expression',1,'p_additive_expression_2','miniphp_parser.py',225),
  ('additive_expression -> term MINUSMINUS','additive_expression',2,'p_additive_expression_3','miniphp_parser.py',229),
  ('additive_expression -> term PLUSPLUS','additive_expression',2,'p_additive_expression_4','miniphp_parser.py',233),
  ('addop -> PLUS','addop',1,'p_addop','miniphp_parser.py',237),
  ('addop -> MINUS','addop',1,'p_addop','miniphp_parser.py',238),
  ('term -> term mulop factor','term',3,'p_term_1','miniphp_parser.py',243),
  ('term -> factor','term',1,'p_term_2','miniphp_parser.py',247),
  ('mulop -> TIMES','mulop',1,'p_mulop','miniphp_parser.py',251),
  ('mulop -> DIVIDE','mulop',1,'p_mulop','miniphp_parser.py',252),
  ('factor -> LPAREN expression RPAREN','factor',3,'p_factor_1','miniphp_parser.py',257),
  ('factor -> var','factor',1,'p_factor_2','miniphp_parser.py',261),
  ('factor -> call','factor',1,'p_factor_3','miniphp_parser.py',265),
  ('factor -> NUMBER','factor',1,'p_factor_4','miniphp_parser.py',269),
  ('factor -> boolean','factor',1,'p_factor_5','miniphp_parser.py',273),
  ('call -> ID LPAREN args RPAREN','call',4,'p_call','miniphp_parser.py',277),
  ('args -> args_list','args',1,'p_args','miniphp_parser.py',281),
  ('args -> empty','args',1,'p_args','miniphp_parser.py',282),
  ('args_list -> args_list COMMA expression','args_list',3,'p_args_list_1','miniphp_parser.py',287),
  ('args_list -> expression','args_list',1,'p_args_list_2','miniphp_parser.py',291),
  ('boolean -> TRUE','boolean',1,'p_boolean','miniphp_parser.py',295),
  ('boolean -> FALSE','boolean',1,'p_boolean','miniphp_parser.py',296),
  ('empty -> <empty>','empty',0,'p_empty','miniphp_parser.py',301),
]
