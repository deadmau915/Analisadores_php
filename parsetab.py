
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = '\xe9,o\xdb%\x06yE\xf6\x00\xd6?\x90\x92\xa1]'
    
_lr_action_items = {'RETURN':([17,64,67,73,74,76,77,78,84,88,91,94,96,101,102,103,105,107,133,134,140,155,157,163,164,165,167,170,171,173,175,176,177,],[-18,-19,-93,-93,-38,-37,79,-40,-45,-47,-39,-43,-42,-41,-36,-44,-55,79,-46,-56,79,79,79,79,-52,-53,-50,-48,-51,79,-49,79,-54,]),'LESS':([32,35,81,83,86,89,92,93,98,100,129,132,137,138,146,153,160,161,],[-92,-91,-84,-85,111,-83,-78,-82,-60,-72,-74,-73,-71,-82,-81,-77,-61,-86,]),'DEFAULT':([17,64,67,73,74,76,77,78,84,88,91,94,96,101,102,103,105,107,133,134,140,155,157,163,164,165,167,170,171,173,175,176,177,],[-18,-19,-93,-93,-38,-37,80,-40,-45,-47,-39,-43,-42,-41,-36,-44,-55,80,-46,-56,80,80,80,80,-52,-53,-50,-48,-51,80,-49,80,-54,]),'REQUIRE':([1,6,8,10,12,13,14,17,24,27,57,64,66,69,102,],[4,-4,-6,-3,4,-7,-5,-18,-2,-9,-8,-19,-29,-10,-36,]),'EQUAL':([11,31,93,98,160,],[21,21,122,-60,-61,]),'ELSE':([84,88,94,96,101,102,103,105,133,134,164,165,167,170,171,175,177,],[-45,-47,-43,-42,-41,-36,-44,-55,-46,-56,-52,-53,-50,173,-51,-49,-54,]),'LBRACKET':([11,41,98,142,],[22,56,125,125,]),'WHILE':([17,64,67,73,74,76,77,78,84,88,91,94,96,101,102,103,105,107,133,134,140,155,157,163,164,165,167,170,171,173,175,176,177,],[-18,-19,-93,-93,-38,-37,82,-40,-45,-47,-39,-43,-42,-41,-36,-44,-55,82,-46,-56,82,82,82,82,-52,-53,-50,-48,-51,82,-49,82,-54,]),'PROTECTED':([17,28,47,58,60,64,66,71,72,75,102,],[-18,46,46,46,-12,-19,-29,-11,-14,-13,-36,]),'OPEN_TAG':([0,],[1,]),'TRUE':([17,21,64,67,73,74,76,77,78,79,84,88,91,94,96,97,101,102,103,105,107,108,109,110,111,112,113,114,115,116,117,118,119,122,125,126,127,128,130,131,133,134,140,155,157,159,162,163,164,165,167,170,171,172,173,175,176,177,],[-18,35,-19,-93,-93,-38,-37,35,-40,35,-45,-47,-39,-43,-42,35,-41,-36,-44,-55,35,35,35,35,-64,-68,-69,-67,-75,-70,-65,-76,-66,35,35,35,35,-80,-79,35,-46,-56,35,35,35,35,35,35,-52,-53,-50,-48,-51,35,35,-49,35,-54,]),'MINUS':([32,35,81,83,86,89,92,93,98,100,129,132,137,138,139,146,153,160,161,174,],[-92,-91,-84,-85,118,-83,-78,-82,-60,-72,-74,-73,-71,-82,118,-81,-77,-61,-86,118,]),'COMMA':([32,35,38,39,41,65,68,81,83,85,86,89,92,93,98,100,129,132,137,138,139,144,146,150,151,153,158,160,161,169,],[-92,-91,54,-33,-34,-32,-35,-84,-85,-58,-63,-83,-78,-82,-60,-72,-74,-73,-71,-82,-62,-57,-81,162,-90,-77,-59,-61,-86,-89,]),'DIVIDE':([32,35,81,83,89,92,93,98,100,137,138,146,153,160,161,],[-92,-91,-84,-85,-83,-78,-82,-60,128,128,-82,-81,-77,-61,-86,]),'CASE':([17,64,67,73,74,76,77,78,84,88,91,94,96,101,102,103,105,107,133,134,140,155,157,163,164,165,167,170,171,173,175,176,177,],[-18,-19,-93,-93,-38,-37,87,-40,-45,-47,-39,-43,-42,-41,-36,-44,-55,87,-46,-56,87,87,87,87,-52,-53,-50,-48,-51,87,-49,87,-54,]),'GREATEREQUAL':([32,35,81,83,86,89,92,93,98,100,129,132,137,138,146,153,160,161,],[-92,-91,-84,-85,114,-83,-78,-82,-60,-72,-74,-73,-71,-82,-81,-77,-61,-86,]),'RPAREN':([25,26,32,35,38,39,40,41,42,65,68,81,83,85,86,89,92,93,98,100,124,126,129,132,136,137,138,139,141,142,144,146,148,149,150,151,152,153,158,160,161,169,174,],[-93,43,-92,-91,-30,-33,55,-34,-31,-32,-35,-84,-85,-58,-63,-83,-78,-82,-60,-72,146,-93,-74,-73,155,-71,-82,-62,157,-60,-57,-81,-88,161,-87,-90,163,-77,-59,-61,-86,-89,176,]),'SEMICOLON':([5,11,17,19,20,29,30,31,32,33,34,35,36,43,49,50,52,53,61,62,63,64,67,73,74,76,77,78,79,81,83,84,85,86,88,89,91,92,93,94,96,98,100,101,102,103,104,105,106,107,129,132,133,134,137,138,139,140,144,145,146,153,154,155,157,158,160,161,163,164,165,166,167,168,170,171,173,175,176,177,],[17,20,-18,29,-21,-27,-20,20,-92,50,51,-91,52,57,-28,-24,-26,64,-22,-23,-25,-19,-93,-93,-38,-37,88,-40,105,-84,-85,-45,-58,-63,-47,-83,-39,-78,-82,-43,-42,-60,-72,-41,-36,-44,133,-55,134,88,-74,-73,-46,-56,-71,-82,-62,88,-57,159,-81,-77,164,88,88,-59,-61,-86,88,-52,-53,171,-50,172,-48,-51,88,-49,88,-54,]),'COLON':([80,120,],[107,140,]),'PRIVATE':([17,28,47,58,60,64,66,71,72,75,102,],[-18,44,44,44,-12,-19,-29,-11,-14,-13,-36,]),'SWITCH':([17,64,67,73,74,76,77,78,84,88,91,94,96,101,102,103,105,107,133,134,140,155,157,163,164,165,167,170,171,173,175,176,177,],[-18,-19,-93,-93,-38,-37,90,-40,-45,-47,-39,-43,-42,-41,-36,-44,-55,90,-46,-56,90,90,90,90,-52,-53,-50,-48,-51,90,-49,90,-54,]),'CLOSE_TAG':([6,8,10,12,13,14,17,24,27,57,64,66,69,102,],[-4,-6,-3,23,-7,-5,-18,-2,-9,-8,-19,-29,-10,-36,]),'PLUS':([32,35,81,83,86,89,92,93,98,100,129,132,137,138,139,146,153,160,161,174,],[-92,-91,-84,-85,115,-83,-78,-82,-60,-72,-74,-73,-71,-82,115,-81,-77,-61,-86,115,]),'CLASS':([1,6,8,10,12,13,14,17,24,27,57,64,66,69,102,],[7,-4,-6,-3,7,-7,-5,-18,-2,-9,-8,-19,-29,-10,-36,]),'FUNCTION_NAME':([3,7,],[15,18,]),'FUNCTION':([1,6,8,10,12,13,14,17,24,27,44,45,46,57,59,64,66,69,70,102,],[3,-4,-6,-3,3,-7,-5,-18,-2,-9,-15,-16,-17,-8,3,-19,-29,-10,3,-36,]),'AMPERSANT':([1,6,8,10,12,13,14,17,20,24,27,29,44,45,46,48,50,51,52,57,59,64,66,67,69,73,74,76,102,122,123,],[9,-4,-6,-3,9,-7,-5,-18,9,-2,-9,9,-15,-16,-17,9,9,9,9,-8,9,-19,-29,-93,-10,9,-38,-37,-36,143,9,]),'STRING':([16,],[26,]),'FOR':([17,64,67,73,74,76,77,78,84,88,91,94,96,101,102,103,105,107,133,134,140,155,157,163,164,165,167,170,171,173,175,176,177,],[-18,-19,-93,-93,-38,-37,95,-40,-45,-47,-39,-43,-42,-41,-36,-44,-55,95,-46,-56,95,95,95,95,-52,-53,-50,-48,-51,95,-49,95,-54,]),'PLUSPLUS':([32,35,81,83,89,92,93,98,100,138,146,153,160,161,],[-92,-91,-84,-85,-83,-78,-82,-60,129,-82,-81,-77,-61,-86,]),'ISEQUAL':([32,35,81,83,86,89,92,93,98,100,129,132,137,138,146,153,160,161,],[-92,-91,-84,-85,116,-83,-78,-82,-60,-72,-74,-73,-71,-82,-81,-77,-61,-86,]),'NUMBER':([17,21,22,64,67,73,74,76,77,78,79,84,87,88,91,94,96,97,101,102,103,105,107,108,109,110,111,112,113,114,115,116,117,118,119,122,125,126,127,128,130,131,133,134,140,155,157,159,162,163,164,165,167,170,171,172,173,175,176,177,],[-18,33,37,-19,-93,-93,-38,-37,81,-40,81,-45,120,-47,-39,-43,-42,81,-41,-36,-44,-55,81,81,81,81,-64,-68,-69,-67,-75,-70,-65,-76,-66,81,81,81,81,-80,-79,81,-46,-56,81,81,81,81,81,81,-52,-53,-50,-48,-51,81,81,-49,81,-54,]),'LPAREN':([4,15,17,64,67,73,74,76,77,78,79,82,84,88,90,91,94,95,96,97,98,99,101,102,103,105,107,108,109,110,111,112,113,114,115,116,117,118,119,122,125,126,127,128,130,131,133,134,140,155,157,159,162,163,164,165,167,170,171,172,173,175,176,177,],[16,25,-18,-19,-93,-93,-38,-37,97,-40,97,108,-45,-47,121,-39,-43,123,-42,97,126,127,-41,-36,-44,-55,97,97,97,97,-64,-68,-69,-67,-75,-70,-65,-76,-66,97,97,97,97,-80,-79,97,-46,-56,97,97,97,97,97,97,-52,-53,-50,-48,-51,97,97,-49,97,-54,]),'LESSEQUAL':([32,35,81,83,86,89,92,93,98,100,129,132,137,138,146,153,160,161,],[-92,-91,-84,-85,117,-83,-78,-82,-60,-72,-74,-73,-71,-82,-81,-77,-61,-86,]),'LBLOCK':([17,18,55,64,67,73,74,76,77,78,84,88,91,94,96,101,102,103,105,107,133,134,140,155,157,163,164,165,167,170,171,173,175,176,177,],[-18,28,67,-19,-93,-93,-38,-37,67,-40,-45,-47,-39,-43,-42,-41,-36,-44,-55,67,-46,-56,67,67,67,67,-52,-53,-50,-48,-51,67,-49,67,-54,]),'MINUSMINUS':([32,35,81,83,89,92,93,98,100,138,146,153,160,161,],[-92,-91,-84,-85,-83,-78,-82,-60,132,-82,-81,-77,-61,-86,]),'TIMES':([32,35,81,83,89,92,93,98,100,137,138,146,153,160,161,],[-92,-91,-84,-85,-83,-78,-82,-60,130,130,-82,-81,-77,-61,-86,]),'ID':([1,6,8,9,10,12,13,14,17,20,21,24,25,27,29,44,45,46,48,50,51,52,54,57,59,64,66,67,69,73,74,76,77,78,79,84,88,91,94,96,97,101,102,103,105,107,108,109,110,111,112,113,114,115,116,117,118,119,121,122,123,125,126,127,128,130,131,133,134,140,143,155,157,159,162,163,164,165,167,170,171,172,173,175,176,177,],[11,-4,-6,19,-3,11,-7,-5,-18,31,36,-2,41,-9,31,-15,-16,-17,11,31,31,31,41,-8,11,-19,-29,-93,-10,11,-38,-37,98,-40,98,-45,-47,-39,-43,-42,98,-41,-36,-44,-55,98,98,98,98,-64,-68,-69,-67,-75,-70,-65,-76,-66,142,98,31,98,98,98,-80,-79,98,-46,-56,98,158,98,98,98,98,98,-52,-53,-50,-48,-51,98,98,-49,98,-54,]),'IF':([17,64,67,73,74,76,77,78,84,88,91,94,96,101,102,103,105,107,133,134,140,155,157,163,164,165,167,170,171,173,175,176,177,],[-18,-19,-93,-93,-38,-37,99,-40,-45,-47,-39,-43,-42,-41,-36,-44,-55,99,-46,-56,99,99,99,99,-52,-53,-50,-48,-51,99,-49,99,-54,]),'FALSE':([17,21,64,67,73,74,76,77,78,79,84,88,91,94,96,97,101,102,103,105,107,108,109,110,111,112,113,114,115,116,117,118,119,122,125,126,127,128,130,131,133,134,140,155,157,159,162,163,164,165,167,170,171,172,173,175,176,177,],[-18,32,-19,-93,-93,-38,-37,32,-40,32,-45,-47,-39,-43,-42,32,-41,-36,-44,-55,32,32,32,32,-64,-68,-69,-67,-75,-70,-65,-76,-66,32,32,32,32,-80,-79,32,-46,-56,32,32,32,32,32,32,-52,-53,-50,-48,-51,32,32,-49,32,-54,]),'GREATER':([32,35,81,83,86,89,92,93,98,100,129,132,137,138,146,153,160,161,],[-92,-91,-84,-85,119,-83,-78,-82,-60,-72,-74,-73,-71,-82,-81,-77,-61,-86,]),'DEQUAL':([32,35,81,83,86,89,92,93,98,100,129,132,137,138,146,153,160,161,],[-92,-91,-84,-85,112,-83,-78,-82,-60,-72,-74,-73,-71,-82,-81,-77,-61,-86,]),'DISTINT':([32,35,81,83,86,89,92,93,98,100,129,132,137,138,146,153,160,161,],[-92,-91,-84,-85,113,-83,-78,-82,-60,-72,-74,-73,-71,-82,-81,-77,-61,-86,]),'BREAK':([84,88,94,96,101,102,103,105,133,134,135,156,164,165,167,170,171,175,177,],[-45,-47,-43,-42,-41,-36,-44,-55,-46,-56,154,166,-52,-53,-50,-48,-51,-49,-54,]),'RBLOCK':([17,58,64,66,67,72,73,74,75,76,77,78,84,88,91,94,96,101,102,103,105,133,134,164,165,167,170,171,175,177,],[-18,69,-19,-29,-93,-14,-93,-38,-13,-37,102,-40,-45,-47,-39,-43,-42,-41,-36,-44,-55,-46,-56,-52,-53,-50,-48,-51,-49,-54,]),'RBRACKET':([32,35,37,56,81,83,85,86,89,92,93,98,100,129,132,137,138,139,144,146,147,153,158,160,161,],[-92,-91,53,68,-84,-85,-58,-63,-83,-78,-82,-60,-72,-74,-73,-71,-82,-62,-57,-81,160,-77,-59,-61,-86,]),'$end':([2,23,],[0,-1,]),'PUBLIC':([17,28,47,58,60,64,66,71,72,75,102,],[-18,45,45,45,-12,-19,-29,-11,-14,-13,-36,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'methods':([47,],[58,]),'return_stmt':([77,107,140,155,157,163,173,176,],[84,84,84,84,84,84,84,84,]),'param_list':([25,],[38,]),'boolean':([21,77,79,97,107,108,109,110,122,125,126,127,131,140,155,157,159,162,163,172,173,176,],[34,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,]),'iteration_stmt':([77,107,140,155,157,163,173,176,],[103,103,103,103,103,103,103,103,]),'var_declaration2':([1,12,20,29,48,50,51,52,59,73,123,],[5,5,30,49,5,61,62,63,5,5,145,]),'simple_expression':([77,79,97,107,108,122,125,126,127,140,155,157,159,162,163,173,176,],[85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,]),'additive_expression':([77,79,97,107,108,110,122,125,126,127,140,155,157,159,162,163,172,173,176,],[86,86,86,86,86,139,86,86,86,86,86,86,86,86,86,86,174,86,86,]),'call':([77,79,97,107,108,109,110,122,125,126,127,131,140,155,157,159,162,163,172,173,176,],[89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,]),'param':([25,54,],[39,65,]),'var_declaration':([1,12,48,59,73,],[6,6,60,71,76,]),'program':([0,],[2,]),'params':([25,],[40,]),'statement':([77,107,140,155,157,163,173,176,],[91,135,156,165,167,170,175,177,]),'factor':([77,79,97,107,108,109,110,122,125,126,127,131,140,155,157,159,162,163,172,173,176,],[92,92,92,92,92,92,92,92,92,92,92,153,92,92,92,92,92,92,92,92,92,]),'var':([77,79,97,107,108,109,110,121,122,125,126,127,131,140,155,157,159,162,163,172,173,176,],[93,93,93,93,93,138,138,141,93,93,93,93,138,93,93,93,93,93,93,138,93,93,]),'selection_stmt':([77,107,140,155,157,163,173,176,],[94,94,94,94,94,94,94,94,]),'empty':([25,67,73,126,],[42,74,78,148,]),'header_declaration':([1,12,],[8,8,]),'addop':([86,139,174,],[109,109,109,]),'args':([126,],[149,]),'compount_stmt':([55,77,107,140,155,157,163,173,176,],[66,96,96,96,96,96,96,96,96,]),'args_list':([126,],[150,]),'declaration':([1,12,],[10,24,]),'local_declarations':([67,],[73,]),'term':([77,79,97,107,108,109,110,122,125,126,127,140,155,157,159,162,163,172,173,176,],[100,100,100,100,100,137,100,100,100,100,100,100,100,100,100,100,100,100,100,100,]),'relop':([86,],[110,]),'expression_stmt':([77,107,140,155,157,163,173,176,],[101,101,101,101,101,101,101,101,]),'declaration_list':([1,],[12,]),'class_declaration':([1,12,],[13,13,]),'fun_declaration':([1,12,59,70,],[14,14,72,75,]),'class_stmt':([18,],[27,]),'mulop':([100,137,],[131,131,]),'statement_list':([73,],[77,]),'attributes':([28,],[47,]),'expression':([77,79,97,107,108,122,125,126,127,140,155,157,159,162,163,173,176,],[104,106,124,104,136,144,147,151,152,104,104,104,168,169,104,104,104,]),'scope':([28,47,58,],[48,59,70,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> OPEN_TAG declaration_list CLOSE_TAG','program',3,'p_program','miniphp_parser.py',10),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list_1','miniphp_parser.py',14),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list_2','miniphp_parser.py',18),
  ('declaration -> var_declaration','declaration',1,'p_declaration','miniphp_parser.py',22),
  ('declaration -> fun_declaration','declaration',1,'p_declaration','miniphp_parser.py',23),
  ('declaration -> header_declaration','declaration',1,'p_declaration','miniphp_parser.py',24),
  ('declaration -> class_declaration','declaration',1,'p_declaration','miniphp_parser.py',25),
  ('header_declaration -> REQUIRE LPAREN STRING RPAREN SEMICOLON','header_declaration',5,'p_header_declaration','miniphp_parser.py',30),
  ('class_declaration -> CLASS FUNCTION_NAME class_stmt','class_declaration',3,'p_class_declaration','miniphp_parser.py',34),
  ('class_stmt -> LBLOCK attributes methods RBLOCK','class_stmt',4,'p_class_stmt','miniphp_parser.py',38),
  ('attributes -> attributes scope var_declaration','attributes',3,'p_attributes1','miniphp_parser.py',42),
  ('attributes -> scope var_declaration','attributes',2,'p_attributes2','miniphp_parser.py',46),
  ('methods -> methods scope fun_declaration','methods',3,'p_methods1','miniphp_parser.py',50),
  ('methods -> scope fun_declaration','methods',2,'p_methods2','miniphp_parser.py',54),
  ('scope -> PRIVATE','scope',1,'p_scope','miniphp_parser.py',58),
  ('scope -> PUBLIC','scope',1,'p_scope','miniphp_parser.py',59),
  ('scope -> PROTECTED','scope',1,'p_scope','miniphp_parser.py',60),
  ('var_declaration -> var_declaration2 SEMICOLON','var_declaration',2,'p_var_declaration_1','miniphp_parser.py',64),
  ('var_declaration -> ID LBRACKET NUMBER RBRACKET SEMICOLON','var_declaration',5,'p_var_declaration_2','miniphp_parser.py',68),
  ('var_declaration2 -> ID SEMICOLON var_declaration2','var_declaration2',3,'p_var_declaration_3','miniphp_parser.py',72),
  ('var_declaration2 -> ID SEMICOLON','var_declaration2',2,'p_var_declaration_3','miniphp_parser.py',73),
  ('var_declaration2 -> ID EQUAL NUMBER SEMICOLON var_declaration2','var_declaration2',5,'p_var_declaration_3','miniphp_parser.py',74),
  ('var_declaration2 -> ID EQUAL boolean SEMICOLON var_declaration2','var_declaration2',5,'p_var_declaration_3','miniphp_parser.py',75),
  ('var_declaration2 -> ID EQUAL NUMBER SEMICOLON','var_declaration2',4,'p_var_declaration_3','miniphp_parser.py',76),
  ('var_declaration2 -> ID EQUAL ID SEMICOLON var_declaration2','var_declaration2',5,'p_var_declaration_3','miniphp_parser.py',77),
  ('var_declaration2 -> ID EQUAL ID SEMICOLON','var_declaration2',4,'p_var_declaration_3','miniphp_parser.py',78),
  ('var_declaration2 -> AMPERSANT ID SEMICOLON','var_declaration2',3,'p_var_declaration_3','miniphp_parser.py',79),
  ('var_declaration2 -> AMPERSANT ID SEMICOLON var_declaration2','var_declaration2',4,'p_var_declaration_3','miniphp_parser.py',80),
  ('fun_declaration -> FUNCTION FUNCTION_NAME LPAREN params RPAREN compount_stmt','fun_declaration',6,'p_fun_declaration','miniphp_parser.py',85),
  ('params -> param_list','params',1,'p_params_1','miniphp_parser.py',89),
  ('params -> empty','params',1,'p_params_2','miniphp_parser.py',93),
  ('param_list -> param_list COMMA param','param_list',3,'p_param_list_1','miniphp_parser.py',97),
  ('param_list -> param','param_list',1,'p_param_list_2','miniphp_parser.py',101),
  ('param -> ID','param',1,'p_param_1','miniphp_parser.py',109),
  ('param -> ID LBRACKET RBRACKET','param',3,'p_param_2','miniphp_parser.py',113),
  ('compount_stmt -> LBLOCK local_declarations statement_list RBLOCK','compount_stmt',4,'p_compount_stmt','miniphp_parser.py',117),
  ('local_declarations -> local_declarations var_declaration','local_declarations',2,'p_local_declarations_1','miniphp_parser.py',121),
  ('local_declarations -> empty','local_declarations',1,'p_local_declarations_2','miniphp_parser.py',125),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list_1','miniphp_parser.py',129),
  ('statement_list -> empty','statement_list',1,'p_statement_list_2','miniphp_parser.py',133),
  ('statement -> expression_stmt','statement',1,'p_statement','miniphp_parser.py',137),
  ('statement -> compount_stmt','statement',1,'p_statement','miniphp_parser.py',138),
  ('statement -> selection_stmt','statement',1,'p_statement','miniphp_parser.py',139),
  ('statement -> iteration_stmt','statement',1,'p_statement','miniphp_parser.py',140),
  ('statement -> return_stmt','statement',1,'p_statement','miniphp_parser.py',141),
  ('expression_stmt -> expression SEMICOLON','expression_stmt',2,'p_expression_stmt_1','miniphp_parser.py',146),
  ('expression_stmt -> SEMICOLON','expression_stmt',1,'p_expression_stmt_2','miniphp_parser.py',150),
  ('selection_stmt -> IF LPAREN expression RPAREN statement','selection_stmt',5,'p_selection_stmt_1','miniphp_parser.py',154),
  ('selection_stmt -> IF LPAREN expression RPAREN statement ELSE statement','selection_stmt',7,'p_selection_stmt_2','miniphp_parser.py',158),
  ('selection_stmt -> SWITCH LPAREN var RPAREN statement','selection_stmt',5,'p_selection_stmt_3','miniphp_parser.py',162),
  ('selection_stmt -> CASE NUMBER COLON statement BREAK SEMICOLON','selection_stmt',6,'p_selection_stmt_4','miniphp_parser.py',166),
  ('selection_stmt -> DEFAULT COLON statement BREAK SEMICOLON','selection_stmt',5,'p_selection_stmt_5','miniphp_parser.py',170),
  ('iteration_stmt -> WHILE LPAREN expression RPAREN statement','iteration_stmt',5,'p_iteration_stmt_1','miniphp_parser.py',174),
  ('iteration_stmt -> FOR LPAREN var_declaration2 SEMICOLON expression SEMICOLON additive_expression RPAREN statement','iteration_stmt',9,'p_iteration_stmt_2','miniphp_parser.py',178),
  ('return_stmt -> RETURN SEMICOLON','return_stmt',2,'p_return_stmt_1','miniphp_parser.py',182),
  ('return_stmt -> RETURN expression SEMICOLON','return_stmt',3,'p_return_stmt_2','miniphp_parser.py',186),
  ('expression -> var EQUAL expression','expression',3,'p_expression_1','miniphp_parser.py',190),
  ('expression -> simple_expression','expression',1,'p_expression_2','miniphp_parser.py',194),
  ('expression -> var EQUAL AMPERSANT ID','expression',4,'p_expression_3','miniphp_parser.py',198),
  ('var -> ID','var',1,'p_var_1','miniphp_parser.py',202),
  ('var -> ID LBRACKET expression RBRACKET','var',4,'p_var_2','miniphp_parser.py',206),
  ('simple_expression -> additive_expression relop additive_expression','simple_expression',3,'p_simple_expression_1','miniphp_parser.py',210),
  ('simple_expression -> additive_expression','simple_expression',1,'p_simple_expression_2','miniphp_parser.py',214),
  ('relop -> LESS','relop',1,'p_relop','miniphp_parser.py',218),
  ('relop -> LESSEQUAL','relop',1,'p_relop','miniphp_parser.py',219),
  ('relop -> GREATER','relop',1,'p_relop','miniphp_parser.py',220),
  ('relop -> GREATEREQUAL','relop',1,'p_relop','miniphp_parser.py',221),
  ('relop -> DEQUAL','relop',1,'p_relop','miniphp_parser.py',222),
  ('relop -> DISTINT','relop',1,'p_relop','miniphp_parser.py',223),
  ('relop -> ISEQUAL','relop',1,'p_relop','miniphp_parser.py',224),
  ('additive_expression -> additive_expression addop term','additive_expression',3,'p_additive_expression_1','miniphp_parser.py',229),
  ('additive_expression -> term','additive_expression',1,'p_additive_expression_2','miniphp_parser.py',234),
  ('additive_expression -> term MINUSMINUS','additive_expression',2,'p_additive_expression_3','miniphp_parser.py',238),
  ('additive_expression -> term PLUSPLUS','additive_expression',2,'p_additive_expression_4','miniphp_parser.py',242),
  ('addop -> PLUS','addop',1,'p_addop','miniphp_parser.py',246),
  ('addop -> MINUS','addop',1,'p_addop','miniphp_parser.py',247),
  ('term -> term mulop factor','term',3,'p_term_1','miniphp_parser.py',252),
  ('term -> factor','term',1,'p_term_2','miniphp_parser.py',256),
  ('mulop -> TIMES','mulop',1,'p_mulop','miniphp_parser.py',260),
  ('mulop -> DIVIDE','mulop',1,'p_mulop','miniphp_parser.py',261),
  ('factor -> LPAREN expression RPAREN','factor',3,'p_factor_1','miniphp_parser.py',266),
  ('factor -> var','factor',1,'p_factor_2','miniphp_parser.py',270),
  ('factor -> call','factor',1,'p_factor_3','miniphp_parser.py',274),
  ('factor -> NUMBER','factor',1,'p_factor_4','miniphp_parser.py',278),
  ('factor -> boolean','factor',1,'p_factor_5','miniphp_parser.py',282),
  ('call -> ID LPAREN args RPAREN','call',4,'p_call','miniphp_parser.py',286),
  ('args -> args_list','args',1,'p_args','miniphp_parser.py',290),
  ('args -> empty','args',1,'p_args','miniphp_parser.py',291),
  ('args_list -> args_list COMMA expression','args_list',3,'p_args_list_1','miniphp_parser.py',296),
  ('args_list -> expression','args_list',1,'p_args_list_2','miniphp_parser.py',300),
  ('boolean -> TRUE','boolean',1,'p_boolean','miniphp_parser.py',304),
  ('boolean -> FALSE','boolean',1,'p_boolean','miniphp_parser.py',305),
  ('empty -> <empty>','empty',0,'p_empty','miniphp_parser.py',310),
]
